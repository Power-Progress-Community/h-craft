diff -U 2 -H -b -w -B -E -d -p -r -N -x '*.svn' -x '*.d' -- svn_hcraft_1.2/irrlicht/source/Irrlicht/CSkyBoxSceneNode.cpp hcraft_libs/irrlicht/source/Irrlicht/CSkyBoxSceneNode.cpp
--- svn_hcraft_1.2/irrlicht/source/Irrlicht/CSkyBoxSceneNode.cpp	2006-12-04 16:19:49.000000000 +0100
+++ hcraft_libs/irrlicht/source/Irrlicht/CSkyBoxSceneNode.cpp	2007-03-03 02:17:44.000000000 +0100
@@ -33,5 +33,7 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	Indices[1] = 1;
 	Indices[2] = 2;
-	Indices[3] = 3;
+   Indices[3] = 2;
+   Indices[4] = 1;
+   Indices[5] = 3;
 
 	// create material
@@ -41,4 +43,5 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	mat.ZBuffer = false;
 	mat.ZWriteEnable = false;
+   mat.BilinearFilter = true;
 
 	/* Hey, I am no artist, but look at that
@@ -56,4 +59,21 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
      -1-1-1     1-1-1         |//    |
 	                         0--------1
+
+
+           NEW IMPLEMENTATION
+          [ Vertex positions ]
+               1-------|3
+                |\\    |
+                |  \\  |
+                |    \\|
+               0--------2
+
+       NEW IMPLEMENTATION - TEXTURE COORDS
+[ Flipped tcoords because image is loaded flipped ]
+             o,o-------|t,o
+                |\\    |
+                |  \\  |
+                |    \\|
+             o,t--------t,t
 	*/
 
@@ -76,11 +97,14 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	f32 t = 1.0f - onepixel;
 	f32 o = 0.0f + onepixel;
+   printf( "SKYBOX: onepixel = %f\n", onepixel );
+
+   // create front side
 
 	Material[0] = mat;
 	Material[0].Texture1 = front;
-	Vertices[0] = video::S3DVertex(-l,-l,-l, 0,0,1, video::SColor(255,255,255,255), o, t);
-	Vertices[1] = video::S3DVertex( l,-l,-l, 0,0,1, video::SColor(255,255,255,255), t, t);
-	Vertices[2] = video::S3DVertex( l, l,-l, 0,0,1, video::SColor(255,255,255,255), t, o);
-	Vertices[3] = video::S3DVertex(-l, l,-l, 0,0,1, video::SColor(255,255,255,255), o, o);
+   Vertices[0] = video::S3DVertex( -l, -l,  l, 0,0,-1, video::SColor(255,255,255,255), o, t );
+   Vertices[1] = video::S3DVertex( -l,  l,  l, 0,0,-1, video::SColor(255,255,255,255), o, o );
+   Vertices[2] = video::S3DVertex(  l, -l,  l, 0,0,-1, video::SColor(255,255,255,255), t, t );
+   Vertices[3] = video::S3DVertex(  l,  l,  l, 0,0,-1, video::SColor(255,255,255,255), t, o );
 
 	// create left side
@@ -88,8 +112,8 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	Material[1] = mat;
 	Material[1].Texture1 = left;
-	Vertices[4] = video::S3DVertex( l,-l,-l, -1,0,0, video::SColor(255,255,255,255), o, t);
-	Vertices[5] = video::S3DVertex( l,-l, l, -1,0,0, video::SColor(255,255,255,255), t, t);
-	Vertices[6] = video::S3DVertex( l, l, l, -1,0,0, video::SColor(255,255,255,255), t, o);
-	Vertices[7] = video::S3DVertex( l, l,-l, -1,0,0, video::SColor(255,255,255,255), o, o);
+   Vertices[4] = video::S3DVertex( -l, -l, -l, 1,0,0, video::SColor(255,255,255,255), o, t );
+   Vertices[5] = video::S3DVertex( -l,  l, -l, 1,0,0, video::SColor(255,255,255,255), o, o );
+   Vertices[6] = video::S3DVertex( -l, -l,  l, 1,0,0, video::SColor(255,255,255,255), t, t );
+   Vertices[7] = video::S3DVertex( -l,  l,  l, 1,0,0, video::SColor(255,255,255,255), t, o );
 
 	// create back side
@@ -97,8 +121,8 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	Material[2] = mat;
 	Material[2].Texture1 = back;
-	Vertices[8]  = video::S3DVertex( l,-l, l, 0,0,-1, video::SColor(255,255,255,255), o, t);
-	Vertices[9]  = video::S3DVertex(-l,-l, l, 0,0,-1, video::SColor(255,255,255,255), t, t);
-	Vertices[10] = video::S3DVertex(-l, l, l, 0,0,-1, video::SColor(255,255,255,255), t, o);
-	Vertices[11] = video::S3DVertex( l, l, l, 0,0,-1, video::SColor(255,255,255,255), o, o);
+   Vertices[8]  = video::S3DVertex(  l, -l, -l, 0,0,1, video::SColor(255,255,255,255), o, t );
+   Vertices[9]  = video::S3DVertex(  l,  l, -l, 0,0,1, video::SColor(255,255,255,255), o, o );
+   Vertices[10] = video::S3DVertex( -l, -l, -l, 0,0,1, video::SColor(255,255,255,255), t, t );
+   Vertices[11] = video::S3DVertex( -l,  l, -l, 0,0,1, video::SColor(255,255,255,255), t, o );
 
 	// create right side
@@ -106,8 +130,8 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	Material[3] = mat;
 	Material[3].Texture1 = right;
-	Vertices[12] = video::S3DVertex(-l,-l, l, 1,0,0, video::SColor(255,255,255,255), o, t);
-	Vertices[13] = video::S3DVertex(-l,-l,-l, 1,0,0, video::SColor(255,255,255,255), t, t);
-	Vertices[14] = video::S3DVertex(-l, l,-l, 1,0,0, video::SColor(255,255,255,255), t, o);
-	Vertices[15] = video::S3DVertex(-l, l, l, 1,0,0, video::SColor(255,255,255,255), o, o);
+   Vertices[12] = video::S3DVertex(  l, -l,  l, -1,0,0, video::SColor(255,255,255,255), o, t );
+   Vertices[13] = video::S3DVertex(  l,  l,  l, -1,0,0, video::SColor(255,255,255,255), o, o );
+   Vertices[14] = video::S3DVertex(  l, -l, -l, -1,0,0, video::SColor(255,255,255,255), t, t );
+   Vertices[15] = video::S3DVertex(  l,  l, -l, -1,0,0, video::SColor(255,255,255,255), t, o );
 
 	// create top side
@@ -115,7 +139,7 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	Material[4] = mat;
 	Material[4].Texture1 = top;
-	Vertices[16] = video::S3DVertex( l, l, l, 0,-1,0, video::SColor(255,255,255,255), o, o);
-	Vertices[17] = video::S3DVertex(-l, l, l, 0,-1,0, video::SColor(255,255,255,255), o, t);
-	Vertices[18] = video::S3DVertex(-l, l,-l, 0,-1,0, video::SColor(255,255,255,255), t, t);
+   Vertices[16] = video::S3DVertex( -l , l,  l, 0,-1,0, video::SColor(255,255,255,255), o, t );
+   Vertices[17] = video::S3DVertex( -l,  l, -l, 0,-1,0, video::SColor(255,255,255,255), o, o );
+   Vertices[18] = video::S3DVertex(  l,  l,  l, 0,-1,0, video::SColor(255,255,255,255), t, t );
 	Vertices[19] = video::S3DVertex( l, l,-l, 0,-1,0, video::SColor(255,255,255,255), t, o);
 
@@ -124,8 +148,22 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 	Material[5] = mat;
 	Material[5].Texture1 = bottom;
-	Vertices[20] = video::S3DVertex(-l,-l, l, 0,1,0, video::SColor(255,255,255,255), o, o);
-	Vertices[21] = video::S3DVertex( l,-l, l, 0,1,0, video::SColor(255,255,255,255), o, t);
+   Vertices[20] = video::S3DVertex( -l, -l, -l, 0,1,0, video::SColor(255,255,255,255), o, t );
+   Vertices[21] = video::S3DVertex( -l, -l,  l, 0,1,0, video::SColor(255,255,255,255), o, o );
 	Vertices[22] = video::S3DVertex( l,-l,-l, 0,1,0, video::SColor(255,255,255,255), t, t);
-	Vertices[23] = video::S3DVertex(-l,-l,-l, 0,1,0, video::SColor(255,255,255,255), t, o);
+   Vertices[23] = video::S3DVertex(  l, -l,  l, 0,1,0, video::SColor(255,255,255,255), t, o );
+
+//   Mesh.addMeshBuffer( mb );
+
+    video::IVideoDriver* driver = SceneManager->getVideoDriver();
+    if ( driver )
+    {
+        for ( int i=0; i < 6; ++i )
+            VertexBuffers[i] = driver->createVertexBuffer( &(Vertices[i*4]), 4, video::EVT_STANDARD);
+    }
+    else
+    {
+        for ( int i=0; i < 6; ++i )
+            VertexBuffers[i] = 0;
+    }
 }
 
@@ -135,4 +173,13 @@ CSkyBoxSceneNode::CSkyBoxSceneNode(video
 CSkyBoxSceneNode::~CSkyBoxSceneNode()
 {
+    video::IVideoDriver* driver = SceneManager->getVideoDriver();
+    if ( driver )
+    {
+        for ( int i=0; i < 6; ++i )
+        if ( VertexBuffers[i] )
+        {
+            driver->destroyVertexBuffer( VertexBuffers[i] );
+        }
+    }
 }
 
@@ -150,5 +197,4 @@ void CSkyBoxSceneNode::render()
 	{
 		// draw perspective skybox
-
 		core::matrix4 mat(AbsoluteTransformation);
 		mat.setTranslation(camera->getAbsolutePosition());
@@ -159,5 +205,13 @@ void CSkyBoxSceneNode::render()
 		{
 			driver->setMaterial(Material[i]);
-			driver->drawIndexedTriangleFan(&Vertices[i*4], 4, Indices, 2);
+
+                if ( VertexBuffers[i] )
+                {
+                    driver->drawIndexedTriangleList(&Vertices[i*4], 4, Indices, 2, VertexBuffers[i]);
+                }
+                else
+                {
+                    driver->drawIndexedTriangleList(&Vertices[i*4], 4, Indices, 2, 0);
+                }
 		}
 	}
@@ -198,5 +252,5 @@ void CSkyBoxSceneNode::render()
 		if ( tex )
 		{
-			core::rect<s32> rctDest(core::position2d<s32>(-1,0), driver->getCurrentRenderTargetSize());
+                        core::rect<s32> rctDest(core::position2d<s32>(0,0), driver->getScreenSize());
 			core::rect<s32> rctSrc(core::position2d<s32>(0,0), tex->getSize());
 
diff -U 2 -H -b -w -B -E -d -p -r -N -x '*.svn' -x '*.d' -- svn_hcraft_1.2/irrlicht/source/Irrlicht/CSkyBoxSceneNode.h hcraft_libs/irrlicht/source/Irrlicht/CSkyBoxSceneNode.h
--- svn_hcraft_1.2/irrlicht/source/Irrlicht/CSkyBoxSceneNode.h	2006-08-28 04:40:33.000000000 +0100
+++ hcraft_libs/irrlicht/source/Irrlicht/CSkyBoxSceneNode.h	2007-03-03 02:14:47.000000000 +0100
@@ -51,7 +51,9 @@ namespace scene
 
 		core::aabbox3d<f32> Box;
-		u16 Indices[4];
+		u16 Indices[6];
 		video::S3DVertex Vertices[4*6];
 		video::SMaterial Material[6];
+
+		u32 VertexBuffers[6]; //! Pointer to a device dependent vertex buffer
 	};
 
