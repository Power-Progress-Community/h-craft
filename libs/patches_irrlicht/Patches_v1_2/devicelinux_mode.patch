diff -U 2 -H -b -w -B -E -d -p -r -N -x '*.svn' -x '*.d' -- svn_hcraft_1.2/irrlicht/source/Irrlicht/CIrrDeviceLinux.cpp hcraft_libs/irrlicht/source/Irrlicht/CIrrDeviceLinux.cpp
--- svn_hcraft_1.2/irrlicht/source/Irrlicht/CIrrDeviceLinux.cpp
+++ hcraft_libs/irrlicht/source/Irrlicht/CIrrDeviceLinux.cpp
@@ -179,10 +176,36 @@ bool CIrrDeviceLinux::createWindow(const
 	// query extension
 
-	if (Fullscreen)
-	{
 		s32 eventbase, errorbase;
 		s32 bestMode = -1;
 		s32 defaultDepth=DefaultDepth(display,screennr);
 
+    #ifdef _IRR_LINUX_X11_RANDR_
+    if (XRRQueryExtension(display, &eventbase, &errorbase))
+    {
+        s32 modeCount;
+        XRRScreenConfiguration *config=XRRGetScreenInfo(display,DefaultRootWindow(display));
+        oldRandrMode=XRRConfigCurrentConfiguration(config,&oldRandrRotation);
+        XRRScreenSize *modes=XRRConfigSizes(config,&modeCount);
+        VideoModeList.setDesktop(defaultDepth, core::dimension2d<s32>(
+            modes[oldRandrMode].width, modes[oldRandrMode].height));
+        for (s32 i = 0; i<modeCount; ++i)
+        {
+            if (bestMode==-1 && modes[i].width == Width && modes[i].height == Height)
+                bestMode = i;
+            VideoModeList.addMode(core::dimension2d<s32>(
+                modes[i].width, modes[i].height), defaultDepth);
+        }
+        if (Fullscreen && !justFooling_)
+        {
+            if (bestMode != -1)
+            {
+                XRRSetScreenConfig(display,config,DefaultRootWindow(display),bestMode,oldRandrRotation,CurrentTime);
+                UseXRandR=true;
+            }
+        }
+        XRRFreeScreenConfigInfo(config);
+    }
+    else
+    #endif
 		#ifdef _IRR_LINUX_X11_VIDMODE_
 		if (XF86VidModeQueryExtension(display, &eventbase, &errorbase))
@@ -204,11 @@ bool CIrrDeviceLinux::createWindow(const
 			for (s32 i = 0; i<modeCount; ++i)
 			{
-				if (bestMode==-1 && modes[i]->hdisplay >= Width && modes[i]->vdisplay >= Height)
-					bestMode = i;
-				else if (bestMode!=-1 && modes[i]->hdisplay >= Width && modes[i]->vdisplay >= Height && modes[i]->hdisplay < modes[bestMode]->vdisplay && modes[i]->vdisplay < modes[bestMode]->hdisplay)
+            if (bestMode==-1 && modes[i]->hdisplay == Width && modes[i]->vdisplay == Height)
 					bestMode = i;
+//				if (bestMode==-1 && modes[i]->hdisplay >= Width && modes[i]->vdisplay >= Height)
+//					bestMode = i;
+//				else if (bestMode!=-1
+//                        && modes[i]->hdisplay >= Width
+//                        && modes[i]->vdisplay >= Height
+//                        && modes[i]->hdisplay < modes[bestMode]->hdisplay
+//                        && modes[i]->vdisplay < modes[bestMode]->vdisplay)
+//					bestMode = i;
 				VideoModeList.addMode(core::dimension2d<s32>(
 					modes[i]->hdisplay, modes[i]->vdisplay), defaultDepth);
 			}
@@ -228,29 +260,6 @@ bool CIrrDeviceLinux::createWindow(const
 		else
 		#endif
-		#ifdef _IRR_LINUX_X11_RANDR_
-		if (XRRQueryExtension(display, &eventbase, &errorbase))
-		{
-			s32 modeCount;
-			XRRScreenConfiguration *config=XRRGetScreenInfo(display,DefaultRootWindow(display));
-			oldRandrMode=XRRConfigCurrentConfiguration(config,&oldRandrRotation);
-			XRRScreenSize *modes=XRRConfigSizes(config,&modeCount);
-			VideoModeList.setDesktop(defaultDepth, core::dimension2d<s32>(
-				modes[oldRandrMode].width, modes[oldRandrMode].height));
-			for (s32 i = 0; i<modeCount; ++i)
-			{
-				if (bestMode==-1 && modes[i].width >= Width && modes[i].height >= Height)
-					bestMode = i;
-				VideoModeList.addMode(core::dimension2d<s32>(
-					modes[i].width, modes[i].height), defaultDepth);
-			}
-			if (bestMode != -1)
 			{
-				XRRSetScreenConfig(display,config,DefaultRootWindow(display),bestMode,oldRandrRotation,CurrentTime);
-				UseXRandR=true;
-			}
-			XRRFreeScreenConfigInfo(config);
-		}
-		else
-		#endif
+        if (Fullscreen)
 		{
 			os::Printer::log("VidMode extension must be installed to allow Irrlicht "
